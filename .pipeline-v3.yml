# fly -t engineering-enablement set-pipeline -p halfpipe-deploy-resource-v3 -c .pipeline-v3.yml

groups: []
resources:
- name: git
  type: git
  source:
    private_key: ((halfpipe-github.private_key))
    uri: git@github.com:springernature/halfpipe-deploy-resource.git
  check_every: 10m
- name: docker-registry-image-dev
  type: docker-image
  source:
    repository: eu.gcr.io/halfpipe-io/cf-resource-v3-dev
    password: ((halfpipe-gcr.private_key))
    username: _json_key
- name: docker-registry-image-stable
  type: docker-image
  source:
    repository: eu.gcr.io/halfpipe-io/cf-resource-v3
    tag: stable
    password: ((halfpipe-gcr.private_key))
    username: _json_key
- name: docker-registry-image-stable-dockerhub
  type: docker-image
  source:
    repository: platformengineering/cf-resource-v3
    username: ((platformengineering-dockerhub.username))
    password: ((platformengineering-dockerhub.password))
- name: cf
  type: cf-resource
  source:
    api: ((cloudfoundry.api-snpaas))
    org: engineering-enablement
    password: ((cloudfoundry.password-snpaas))
    space: integration_test_v3
    username: ((cloudfoundry.username-snpaas))
  check_every: 24h
resource_types:
- name: cf-resource
  type: registry-image
  source:
    repository: eu.gcr.io/halfpipe-io/cf-resource-v3-dev
    password: ((halfpipe-gcr.private_key))
    username: _json_key

jobs:
- name: push_test_resource
  serial: true
  plan:
  - get: git
    trigger: true
  - put: docker-registry-image-dev
    params:
      build: git
      dockerfile: git/Dockerfile_Distroless
  - config:
      image_resource:
        source:
          registry_mirror:
            host: eu-mirror.gcr.io
          repository: alpine
          password: ((halfpipe-gcr.private_key))
          username: _json_key
        type: registry-image
      params:
        CONCOURSE_PASSWORD: ((concourse.password))
        CONCOURSE_TEAM: ((concourse.team))
        CONCOURSE_URL: ((concourse.url))
        CONCOURSE_USERNAME: ((concourse.username))
      platform: linux
      run:
        args:
          - -c
          - |
            wget "$CONCOURSE_URL/api/v1/cli?arch=amd64&platform=linux" -O fly
            chmod +x fly
            ./fly -t $CONCOURSE_TEAM login -c $CONCOURSE_URL -u $CONCOURSE_USERNAME -p $CONCOURSE_PASSWORD -n $CONCOURSE_TEAM
            ./fly -t $CONCOURSE_TEAM check-resource-type -r halfpipe-deploy-resource-v3/cf-resource
        path: /bin/sh
    task: check-resource-type
    timeout: 1h

- name: cleanup_cf
  plan:
  - get: git
    passed:
      - push_test_resource
  - get: docker-registry-image-dev
    passed:
      - push_test_resource
    trigger: true
  - config:
      image_resource:
        source:
          registry_mirror:
            host: eu-mirror.gcr.io
          repository: eu.gcr.io/halfpipe-io/cf-resource-v2-dev
          password: ((halfpipe-gcr.private_key))
          username: _json_key
        type: registry-image
      params:
        CF_API: ((cloudfoundry.api-snpaas))
        CF_ORG: engineering-enablement
        CF_PASSWORD: ((cloudfoundry.password-snpaas))
        CF_SPACE: integration_test_v3
        CF_USERNAME: ((cloudfoundry.username-snpaas))
      platform: linux
      run:
        args:
          - -c
          - |
            cf7 login -a $CF_API -u $CF_USERNAME -p $CF_PASSWORD -o $CF_ORG -s $CF_SPACE
            export APPS_TO_DELETE=`cf7 apps |  awk 'NR > 3 { print $1}'`
            for app in $APPS_TO_DELETE; do
              cf7 delete -f $app
            done
            echo "Space should now be clean..."
            cf7 apps
        path: /bin/sh
    task: cleanup
    timeout: 1h
  serial: true

- name: test_resource_cf6_1
  serial: true
  plan:
  - get: git
    passed:
    - cleanup_cf
  - get: docker-registry-image-dev
    passed:
    - cleanup_cf
    trigger: true
  - put: cf
    params:
      command: check
  - put: cf
    params:
      appPath: git/.integration_test
      command: halfpipe-push
      gitRefPath: git/.git/ref
      gitUri: git@github.com:springernature/halfpipe-deploy-resource.git
      manifestPath: git/.integration_test/manifest-cf6-v3.yml
      testDomain: springernature.app
      vars:
        RUN: test_resource_cf6_1
  - put: cf
    params:
      command: halfpipe-check
      manifestPath: git/.integration_test/manifest-cf6-v3.yml
  - put: cf
    params:
      command: halfpipe-promote
      manifestPath: git/.integration_test/manifest-cf6-v3.yml
      testDomain: springernature.app
  ensure:
    put: cf
    params:
      command: halfpipe-cleanup
      manifestPath: git/.integration_test/manifest-cf6-v3.yml

- name: test_resource_cf6_2
  serial: true
  plan:
    - get: git
      passed:
        - test_resource_cf6_1
    - get: docker-registry-image-dev
      passed:
        - test_resource_cf6_1
      trigger: true
    - put: cf
      params:
        command: check
    - put: cf
      params:
        appPath: git/.integration_test
        command: halfpipe-push
        gitRefPath: git/.git/ref
        gitUri: git@github.com:springernature/halfpipe-deploy-resource.git
        manifestPath: git/.integration_test/manifest-cf6-v3.yml
        testDomain: springernature.app
        vars:
          RUN: test_resource_cf6_2
    - put: cf
      params:
        command: halfpipe-check
        manifestPath: git/.integration_test/manifest-cf6-v3.yml
    - put: cf
      params:
        command: halfpipe-promote
        manifestPath: git/.integration_test/manifest-cf6-v3.yml
        testDomain: springernature.app
  ensure:
    put: cf
    params:
      command: halfpipe-cleanup
      manifestPath: git/.integration_test/manifest-cf6-v3.yml

- name: test_resource_cf6_3
  serial: true
  plan:
    - get: git
      passed:
        - test_resource_cf6_2
    - get: docker-registry-image-dev
      passed:
        - test_resource_cf6_2
      trigger: true
    - put: cf
      params:
        command: check
    - put: cf
      params:
        appPath: git/.integration_test
        command: halfpipe-push
        gitRefPath: git/.git/ref
        gitUri: git@github.com:springernature/halfpipe-deploy-resource.git
        manifestPath: git/.integration_test/manifest-cf6-v3.yml
        testDomain: springernature.app
        vars:
          RUN: test_resource_cf6_3
        team: engineering-enablement
    - put: cf
      params:
        command: halfpipe-check
        manifestPath: git/.integration_test/manifest-cf6-v3.yml
    - put: cf
      params:
        command: halfpipe-promote
        manifestPath: git/.integration_test/manifest-cf6-v3.yml
        testDomain: springernature.app
  ensure:
    put: cf
    params:
      command: halfpipe-cleanup
      manifestPath: git/.integration_test/manifest-cf6-v3.yml


- name: test_resource_cf7_1
  serial: true
  plan:
    - get: git
      passed:
        - cleanup_cf
    - get: docker-registry-image-dev
      passed:
        - cleanup_cf
      trigger: true
    - put: cf
      params:
        command: check
    - put: cf
      params:
        appPath: git/.integration_test
        command: halfpipe-push
        gitRefPath: git/.git/ref
        gitUri: git@github.com:springernature/halfpipe-deploy-resource.git
        manifestPath: git/.integration_test/manifest-cf7-v3.yml
        testDomain: springernature.app
        cliVersion: cf7
        vars:
          RUN: test_resource_cf7_1
    - put: cf
      params:
        command: halfpipe-check
        manifestPath: git/.integration_test/manifest-cf7-v3.yml
        cliVersion: cf7
    - put: cf
      params:
        command: halfpipe-promote
        manifestPath: git/.integration_test/manifest-cf7-v3.yml
        testDomain: springernature.app
        cliVersion: cf7
  ensure:
    put: cf
    params:
      command: halfpipe-cleanup
      cliVersion: cf7
      manifestPath: git/.integration_test/manifest-cf7-v3.yml

- name: test_resource_cf7_2
  serial: true
  plan:
    - get: git
      passed:
        - test_resource_cf7_1
    - get: docker-registry-image-dev
      passed:
        - test_resource_cf7_1
      trigger: true
    - put: cf
      params:
        command: check
    - put: cf
      params:
        appPath: git/.integration_test
        command: halfpipe-push
        gitRefPath: git/.git/ref
        gitUri: git@github.com:springernature/halfpipe-deploy-resource.git
        manifestPath: git/.integration_test/manifest-cf7-v3.yml
        testDomain: springernature.app
        cliVersion: cf7
        vars:
          RUN: test_resource_cf7_2
    - put: cf
      params:
        command: halfpipe-check
        manifestPath: git/.integration_test/manifest-cf7-v3.yml
        cliVersion: cf7
    - put: cf
      params:
        command: halfpipe-promote
        manifestPath: git/.integration_test/manifest-cf7-v3.yml
        testDomain: springernature.app
        cliVersion: cf7
  ensure:
    put: cf
    params:
      command: halfpipe-cleanup
      cliVersion: cf7
      manifestPath: git/.integration_test/manifest-cf7-v3.yml

- name: test_resource_cf7_3
  serial: true
  plan:
    - get: git
      passed:
        - test_resource_cf7_2
    - get: docker-registry-image-dev
      passed:
        - test_resource_cf7_2
      trigger: true
    - put: cf
      params:
        command: check
    - put: cf
      params:
        appPath: git/.integration_test
        command: halfpipe-push
        gitRefPath: git/.git/ref
        gitUri: git@github.com:springernature/halfpipe-deploy-resource.git
        manifestPath: git/.integration_test/manifest-cf7-v3.yml
        testDomain: springernature.app
        cliVersion: cf7
        vars:
          RUN: test_resource_cf7_3
        team: engineering-enablement
    - put: cf
      params:
        command: halfpipe-check
        manifestPath: git/.integration_test/manifest-cf7-v3.yml
        cliVersion: cf7
    - put: cf
      params:
        command: halfpipe-promote
        manifestPath: git/.integration_test/manifest-cf7-v3.yml
        testDomain: springernature.app
        cliVersion: cf7
  ensure:
    put: cf
    params:
      command: halfpipe-cleanup
      cliVersion: cf7
      manifestPath: git/.integration_test/manifest-cf7-v3.yml

- name: test_resource_cf8_1
  serial: true
  plan:
    - get: git
      passed:
        - cleanup_cf
    - get: docker-registry-image-dev
      passed:
        - cleanup_cf
      trigger: true
    - put: cf
      params:
        command: check
    - put: cf
      params:
        appPath: git/.integration_test
        command: halfpipe-push
        gitRefPath: git/.git/ref
        gitUri: git@github.com:springernature/halfpipe-deploy-resource.git
        manifestPath: git/.integration_test/manifest-cf8-v3.yml
        testDomain: springernature.app
        cliVersion: cf8
        vars:
          RUN: test_resource_cf8_1
    - put: cf
      params:
        command: halfpipe-check
        manifestPath: git/.integration_test/manifest-cf8-v3.yml
        cliVersion: cf8
    - put: cf
      params:
        command: halfpipe-promote
        manifestPath: git/.integration_test/manifest-cf8-v3.yml
        testDomain: springernature.app
        cliVersion: cf8
  ensure:
    put: cf
    params:
      command: halfpipe-cleanup
      cliVersion: cf8
      manifestPath: git/.integration_test/manifest-cf8-v3.yml

- name: test_resource_cf8_2
  serial: true
  plan:
    - get: git
      passed:
        - test_resource_cf8_1
    - get: docker-registry-image-dev
      passed:
        - test_resource_cf8_1
      trigger: true
    - put: cf
      params:
        command: check
    - put: cf
      params:
        appPath: git/.integration_test
        command: halfpipe-push
        gitRefPath: git/.git/ref
        gitUri: git@github.com:springernature/halfpipe-deploy-resource.git
        manifestPath: git/.integration_test/manifest-cf8-v3.yml
        testDomain: springernature.app
        cliVersion: cf8
        vars:
          RUN: test_resource_cf8_2
    - put: cf
      params:
        command: halfpipe-check
        manifestPath: git/.integration_test/manifest-cf8-v3.yml
        cliVersion: cf8
    - put: cf
      params:
        command: halfpipe-promote
        manifestPath: git/.integration_test/manifest-cf8-v3.yml
        testDomain: springernature.app
        cliVersion: cf8
  ensure:
    put: cf
    params:
      command: halfpipe-cleanup
      cliVersion: cf8
      manifestPath: git/.integration_test/manifest-cf8-v3.yml

- name: test_resource_cf8_3
  serial: true
  plan:
    - get: git
      passed:
        - test_resource_cf8_2
    - get: docker-registry-image-dev
      passed:
        - test_resource_cf8_2
      trigger: true
    - put: cf
      params:
        command: check
    - put: cf
      params:
        appPath: git/.integration_test
        command: halfpipe-push
        gitRefPath: git/.git/ref
        gitUri: git@github.com:springernature/halfpipe-deploy-resource.git
        manifestPath: git/.integration_test/manifest-cf8-v3.yml
        testDomain: springernature.app
        cliVersion: cf8
        vars:
          RUN: test_resource_cf8_3
        team: engineering-enablement
    - put: cf
      params:
        command: halfpipe-check
        manifestPath: git/.integration_test/manifest-cf8-v3.yml
        cliVersion: cf8
    - put: cf
      params:
        command: halfpipe-promote
        manifestPath: git/.integration_test/manifest-cf8-v3.yml
        testDomain: springernature.app
        cliVersion: cf8
  ensure:
    put: cf
    params:
      command: halfpipe-cleanup
      cliVersion: cf8
      manifestPath: git/.integration_test/manifest-cf8-v3.yml

- name: check_cf
  plan:
    - get: git
      passed:
        - test_resource_cf6_3
        - test_resource_cf7_3
        - test_resource_cf8_3
    - get: docker-registry-image-dev
      passed:
        - test_resource_cf6_3
        - test_resource_cf7_3
        - test_resource_cf8_3
      trigger: true
    - config:
        image_resource:
          source:
            registry_mirror:
              host: eu-mirror.gcr.io
            repository: eu.gcr.io/halfpipe-io/cf-resource-v2-dev
            password: ((halfpipe-gcr.private_key))
            username: _json_key
          type: registry-image
        params:
          CF_API: ((cloudfoundry.api-snpaas))
          CF_ORG: engineering-enablement
          CF_PASSWORD: ((cloudfoundry.password-snpaas))
          CF_SPACE: integration_test_v3
          CF_USERNAME: ((cloudfoundry.username-snpaas))
        platform: linux
        run:
          args:
            - -c
            - |
              cf7 login -a $CF_API -u $CF_USERNAME -p $CF_PASSWORD -o $CF_ORG -s $CF_SPACE
              cf7 apps > /tmp/apps

              echo Checking for integration-test-app-cf6-v3 and integration-test-app-cf6-v3-OLD
              cat /tmp/apps | egrep '^integration-test-app-cf6-v3\s+'
              cf7 env integration-test-app-cf6-v3 | grep test_resource_cf6_3
              cat /tmp/apps | grep integration-test-app-cf6-v3-OLD
              cf7 env integration-test-app-cf6-v3-OLD | grep test_resource_cf6_2

              echo Checking for integration-test-app-cf7-v3 and integration-test-app-cf7-v3-OLD
              cat /tmp/apps | egrep '^integration-test-app-cf7-v3\s+'
              cf7 env integration-test-app-cf7-v3 | grep test_resource_cf7_3
              cat /tmp/apps | grep integration-test-app-cf7-v3-OLD
              cf7 env integration-test-app-cf7-v3-OLD | grep test_resource_cf7_2

              echo Checking for integration-test-app-cf8-v3 and integration-test-app-cf8-v3-OLD
              cat /tmp/apps | egrep '^integration-test-app-cf8-v3\s+'
              cf7 env integration-test-app-cf8-v3 | grep test_resource_cf8_3
              cat /tmp/apps | grep integration-test-app-cf8-v3-OLD
              cf7 env integration-test-app-cf8-v3-OLD | grep test_resource_cf8_2
          path: /bin/sh
      task: check_cf_state
      timeout: 1h
  serial: true


- name: push_resource
  serial: true
  plan:
  - get: git
    passed:
    - check_cf
    trigger: true
  - put: docker-registry-image-stable
    params:
      build: git
      tag_file: git/.docker-stable-tag
      tag_as_latest: true
      dockerfile: git/Dockerfile_Distroless
  - put: docker-registry-image-stable-dockerhub
    params:
      build: git
      tag_file: git/.docker-stable-tag
      tag_as_latest: true
      dockerfile: git/Dockerfile_Distroless